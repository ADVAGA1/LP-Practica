# Generated from .\Expr.g by ANTLR 4.11.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,22,112,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,1,0,1,0,1,0,1,1,1,1,1,1,1,2,1,2,1,3,1,3,1,
        4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,
        8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,4,13,82,8,13,11,13,
        12,13,83,1,14,4,14,87,8,14,11,14,12,14,88,1,15,4,15,92,8,15,11,15,
        12,15,93,1,15,1,15,1,16,1,16,1,17,1,17,1,17,1,18,1,18,1,18,1,19,
        1,19,1,20,1,20,1,21,1,21,1,21,0,0,22,1,1,3,2,5,3,7,4,9,5,11,6,13,
        7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,
        37,19,39,20,41,21,43,22,1,0,3,1,0,48,57,1,0,97,122,2,0,10,10,32,
        32,114,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,
        0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,
        0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,
        0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,
        0,0,41,1,0,0,0,0,43,1,0,0,0,1,45,1,0,0,0,3,48,1,0,0,0,5,51,1,0,0,
        0,7,53,1,0,0,0,9,55,1,0,0,0,11,60,1,0,0,0,13,66,1,0,0,0,15,68,1,
        0,0,0,17,70,1,0,0,0,19,72,1,0,0,0,21,74,1,0,0,0,23,76,1,0,0,0,25,
        78,1,0,0,0,27,81,1,0,0,0,29,86,1,0,0,0,31,91,1,0,0,0,33,97,1,0,0,
        0,35,99,1,0,0,0,37,102,1,0,0,0,39,105,1,0,0,0,41,107,1,0,0,0,43,
        109,1,0,0,0,45,46,5,60,0,0,46,47,5,45,0,0,47,2,1,0,0,0,48,49,5,105,
        0,0,49,50,5,102,0,0,50,4,1,0,0,0,51,52,5,123,0,0,52,6,1,0,0,0,53,
        54,5,125,0,0,54,8,1,0,0,0,55,56,5,101,0,0,56,57,5,108,0,0,57,58,
        5,115,0,0,58,59,5,101,0,0,59,10,1,0,0,0,60,61,5,119,0,0,61,62,5,
        104,0,0,62,63,5,105,0,0,63,64,5,108,0,0,64,65,5,101,0,0,65,12,1,
        0,0,0,66,67,5,94,0,0,67,14,1,0,0,0,68,69,5,42,0,0,69,16,1,0,0,0,
        70,71,5,47,0,0,71,18,1,0,0,0,72,73,5,43,0,0,73,20,1,0,0,0,74,75,
        5,45,0,0,75,22,1,0,0,0,76,77,5,40,0,0,77,24,1,0,0,0,78,79,5,41,0,
        0,79,26,1,0,0,0,80,82,7,0,0,0,81,80,1,0,0,0,82,83,1,0,0,0,83,81,
        1,0,0,0,83,84,1,0,0,0,84,28,1,0,0,0,85,87,7,1,0,0,86,85,1,0,0,0,
        87,88,1,0,0,0,88,86,1,0,0,0,88,89,1,0,0,0,89,30,1,0,0,0,90,92,7,
        2,0,0,91,90,1,0,0,0,92,93,1,0,0,0,93,91,1,0,0,0,93,94,1,0,0,0,94,
        95,1,0,0,0,95,96,6,15,0,0,96,32,1,0,0,0,97,98,5,62,0,0,98,34,1,0,
        0,0,99,100,5,62,0,0,100,101,5,61,0,0,101,36,1,0,0,0,102,103,5,60,
        0,0,103,104,5,61,0,0,104,38,1,0,0,0,105,106,5,60,0,0,106,40,1,0,
        0,0,107,108,5,61,0,0,108,42,1,0,0,0,109,110,5,33,0,0,110,111,5,61,
        0,0,111,44,1,0,0,0,4,0,83,88,93,1,6,0,0
    ]

class ExprLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    NUM = 14
    VAR = 15
    WS = 16
    GT = 17
    GTE = 18
    LTE = 19
    LT = 20
    EQ = 21
    DIF = 22

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'<-'", "'if'", "'{'", "'}'", "'else'", "'while'", "'^'", "'*'", 
            "'/'", "'+'", "'-'", "'('", "')'", "'>'", "'>='", "'<='", "'<'", 
            "'='", "'!='" ]

    symbolicNames = [ "<INVALID>",
            "NUM", "VAR", "WS", "GT", "GTE", "LTE", "LT", "EQ", "DIF" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "NUM", 
                  "VAR", "WS", "GT", "GTE", "LTE", "LT", "EQ", "DIF" ]

    grammarFileName = "Expr.g"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.11.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


